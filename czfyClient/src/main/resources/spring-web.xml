<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-3.2.xsd 
	http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context-3.2.xsd
    http://www.springframework.org/schema/aop 
    http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
	http://www.springframework.org/schema/mvc
    http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
    http://www.springframework.org/schema/util        
    http://www.springframework.org/schema/util/spring-util-3.2.xsd">

	<!-- 自动扫描包，可以写多个 -->
	<context:component-scan base-package="party.artemis.czfy"/>
	
	<!-- 视图解释类 -->  
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView" />
        <property name="prefix" value="/WEB-INF/admin/"/>
        <!--可为空,方便实现自已的依据扩展名来选择视图解释类的逻辑-->
        <property name="suffix" value=".html"/>
    </bean>
    
    
    <!-- 配置拦截器 -->
     <mvc:interceptors>
        <mvc:interceptor>
        <!-- 拦截器拦截的URL格式 -->
            <mvc:mapping path="/client/**" />
            <!-- 处理拦截的具体实现类 -->
            <bean class="party.artemis.czfy.interceptor.CorsInterceptor" />
        </mvc:interceptor>
    </mvc:interceptors>  

	<!-- 添加配置，可以直接使用@ResponseBody返回json字符串 -->
	<mvc:annotation-driven>
		<mvc:message-converters>
			<ref bean="stringHttpMessageConverter"/>  
	        <ref bean="utf8StringHttpMessageConverter"/>
		</mvc:message-converters>
	</mvc:annotation-driven>
	
	
	  
	<bean id="stringHttpMessageConverter"  
        class="org.springframework.http.converter.StringHttpMessageConverter">  
        <constructor-arg value="UTF-8" index="0"></constructor-arg><!--避免出现乱码 -->  
        <property name="supportedMediaTypes">  
            <list>  
                <value>text/plain;charset=UTF-8</value> 
                <value>text/html;charset=UTF-8</value>
                <value>application/json;charset=UTF-8</value>
                 
            </list>  
        </property>  
    </bean>
      
	<bean id="utf8StringHttpMessageConverter" class="org.springframework.http.converter.StringHttpMessageConverter">
		<property name="supportedMediaTypes">
			<list>
				<value>text/plain;charset=UTF-8</value>
				<value>text/html;charset=UTF-8</value>
				<value>application/json;charset=UTF-8</value>
			</list>
		</property>
	</bean>
	
	<bean id="marshallingHttpMessageConverter"  
        class="org.springframework.http.converter.xml.MarshallingHttpMessageConverter">  
        <property name="marshaller" ref="castorMarshaller" />  
        <property name="unmarshaller" ref="castorMarshaller" />  
        <property name="supportedMediaTypes">  
            <list>  
                <value>text/xml;charset=UTF-8</value>  
                <value>application/xml;charset=UTF-8</value>  
            </list>  
        </property>  
    </bean>
    
    <bean id="castorMarshaller" class="org.springframework.oxm.castor.CastorMarshaller" />  
	
	<!-- 返回类型定义 -->  
    <util:list id="messageConverters">  
        <ref bean="stringHttpMessageConverter" />  
        <ref bean="utf8StringHttpMessageConverter"/>  
    </util:list>
	
	<!-- RESTful风格链接,处理静态资源无法访问的问题 -->
    <mvc:default-servlet-handler />
    
    
    <!-- 支持上传文件 -->  
    <bean id="multipartResolver"  
        class="org.springframework.web.multipart.commons.CommonsMultipartResolver" />  
  
    <!-- restTemplate -->  
    <bean id="restTemplate" class="org.springframework.web.client.RestTemplate">  
        <property name="messageConverters" ref="messageConverters">  
        </property>  
    </bean>  
    
	<!-- 异常处理 -->
	<bean id="exceptionResolver"
		class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
		<property name="defaultErrorView">
			<value>error</value>
		</property>
		<property name="exceptionMappings">
			<props>
				<prop key="java.lang.RuntimeException">error</prop>
			</props>
		</property>
	</bean>
</beans>